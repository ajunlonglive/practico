#[VersionCompatible]
#Utilice vacios para crear parches compatibles con cualquier version: Usado para tmp/par_compat.txt
VersionCompatibleAno=""
VersionCompatibleMes=""

#[VersionFinal]
#Utilice vacios para crear parches compatibles con cualquier version: Usado para inc/version_actual.txt
VersionFinalAno=""
VersionFinalMes=""

#[Archivo de version]
#Predeterminado: " inc/version_actual.txt "  DEJAR EN BLANCO para parches compatibles con cualquier version. Pero hay error de no reconocimiento.  Validar en actualizacion.php
ArchivoVersion=" inc/version_actual.txt "

#[ListaArchivos] Separados por espacio o salto de linea, se puede usar notacion core/* para incluir por ejemplo subcarpetas
ListaArchivos="
index.php
core/comunes.php
core/informes.php
core/formularios.php
core/menus.php
core/usuarios.php
core/marco_abajo.php
core/marco_nav.php
core/marco_forms.php
core/marco_navizq.php
mod/pcoder/inc/variables.php
inc/reactjs/*

xml/*
inc/practico/idiomas/*
inc/practico/def_basedatos.php
inc/bootstrap/js/practico*
inc/bootstrap/css/practico*
"
 
#[ArchivosObligatorios] Separados por espacio
ArchivosFijos=" tmp/par_cambios.txt tmp/par_sql.txt tmp/par_compat.txt tmp/leame.txt "

########################################################################
#[LogCambios] Usado para tmp/par_cambios.txt
#TOMAR CONTENIDO DESDE EL README
#Agregar un texto para parches sin version que al menos recomiende la minima:  SE RECOMIENDA APLICAR A UNA VERSION MINIMA DE xx.xx
LogCambios="
* Added: Agregado el soporte nativo para ReactJS.  Las librerías de base se encuentran incluidas en el core del aplicativo y pueden ser aplicadas desde cualquier JS de formularios, eventos o personalizado.  Más información de cómo integrar fácilmente ReactJS a su proyecto puede ser encontrada en la documentación oficial aquí:  https://es.reactjs.org/docs/add-react-to-a-website.html
* Enhan: Cambios de clave para usuarios han sido reemplazados por objetos internos
* Enhan: Reajustado el menu de configuracion
* Added: Se ha agregado un generador y consumidor nativo de URLs cortas disponible en el menú de configuración.  Puede ser utilizado para consumos internos o incluso para sistemas de reventa de direcciones.  Cualquier variable recibida en los parámetros como q (letra cu, q) será interpretada como variable de enlace corto y será procesada como tal.
* Added: Soporte de editor para archivos gcloudignore
* Added: Los botones de acción agregados a los formularios en su barra inferior permiten ahora definir un ID de HTML único, lo que permitirá su fácil manipulación en tiempo de ejecución mediante JS o JQuery 
* Added: Agregadas directivas en app.yaml para despliegues rápidos y elásticos sobre GAE (Google Application Engine)
* Enhan: Las opciones agregadas al menú izquierdo en formatos dropdown son agregadas dentro de items independientes con su propio salto de línea y clasificadas automáticamente según su sección
* Fixed: Se retira la recoleccion de informacion mediante getallheaders() para el reporte automático de Bugs por compatibilidad con despliegues elásticos sobre Google Application Engine.
* Enhan: Aumentado el tamano del campo ancho para la tabla de informes de manera que permita establecer el ancho según una clase CSS de Bootstrap para informes disponibles en el home de ususario y ajustadas las ayudas correspondientes en formulario de edicion de informes.
* Added: Ahora sobre los informes se puede definir si éstos estarán o no disponibles para publicar directamente en el home como una forma rápida de generación de tableros de mando de usuario.  Un informe podrá entonces ser visualizado por medio del embebido de un formulario (forma tradicional) o la activación de disponibilidad en el home y posterior asignación como permiso al usuario.  Práctico automáticamente buscará informes de home asignados directamente al usuario y los presentará automáticamente en el escritorio.
* Enhan: Actualizada clase para elementos ocultos en impresion que sobreescribe el estado previo de visibilidad como !important para garantizar su ocultamiento.
* Enhan: Habilitada bandera de autodestruccion automatica de objetos tipo DataTable para cuando estos requieran ser reinicializados.  Si no existe el objeto lo inicializa, caso contrario lo elimina y reinicializa.
* Fixed: Corregido ocultamiento de menues laterales sobre dispositivos móviles.
* Enhan: Funciones de generacion de paneles PCO_ImprimirPanelSimpleDashboard() soportan la especificacion de la clase CSS usada para sus titulos
* Added: El editor de codigo {P}Coder almacena el tipo de origen del codigo operado: A=rchivo F=ormulario I=nforme
* Added: La funcion de CallBack para reemplazo de variables en cadenas PHP ha cambiado y permite ahora utilizar parametros para obtener valores directos desde un registro de datos del formulario que se esta cargando en el momento.  Para obtener valores de campos del formulario cargado actualmente directamente desde su variable PHP utilice la notacion {$ PCO_RegistroDatosActivo[PosicionONombreCampo]} lo que retorna el valor del campo para el registro que actualmente se esta recuperando sobre el formulario.  Puede ser utilizada en:  Campos texto corto (placeholder, valor, label y ayudas), Campos texto largo (placeholder, valor, label y ayudas), Campos de texto con formato no responsive (ayudas), Listas de selección (label, valores de opciones, etiquetas de opciones, condiciones de filtrado y ayudas), Etiquetas (valor), Valor de campo como etiqueta (ayudas), Listas tipo radio (label, valor del elemento, etiqueta del elemento y ayudas), Campos tipo check (label, tag personalizado), Deslizadores (label y ayudas), Archivos adjuntos (label y ayudas), Objetos canvas (label y ayudas), Objetos webcam (label y ayudas), Botones de comando (mensajes de confirmación, label),
* Enhan: Las opciones del menu de navegacion izquierdo son presentadas de acuerdo a su peso de manera ascendente
* Enhan: Eliminado acceso a Waffle para seguimiento de Issues y PR. Agregado indicador de listo para PHP7.  Eliminado acceso a Hackpad para control de actividades e ideas por ejecutar.
* Fixed: Corregido script en fallo durante pruebas unitarias de SQLite.
* Fixed: Valor por defecto en parametro de ubicacion para función PCO_GenerarBotonesInforme
* Enhan: Agregadas llaves foraneas entre objetos internos para aumentar velocidad en recuperacion de elementos durante el diseño.
* Enhan: Eliminado el soporte de Postgresql y SQLite para operación del framework.  En adelante todo el framework corre internamente con MySQL o MariaDB.  El soporte para Postgresql y SQlite sigue operativo desde las conexiones extra que pueden ser creadas posterior a la instalación.  Aquellos que utilicen alguno de estos motores pueden hacer una migración directa de sus tablas a MySQL y crear una conexión extra para el motor actualmente trabajado bajo la opción Conexiones Extra y Replicación.

"


########################################################################
#[ScriptBasedatos] Usado para tmp/par_sql.txt
# RECORDAR EN OPCIONES MULTI-IDIOMA:  UPDATE core_opcionlista SET valor_visual = REPLACE(valor_visual, '{ $ ', '{$');
ScriptBasedatos="

CREATE TABLE core_acortadorurls (
  id int(11) unsigned NOT NULL AUTO_INCREMENT PRIMARY KEY,
  url_larga varchar(1024) NOT NULL,
  url_corta varchar(10) NOT NULL,
  usuario varchar(255) NOT NULL,
  fecha_creacion date NOT NULL,
  hora_creacion time NOT NULL,
  contador_uso int(11) NOT NULL DEFAULT '0',
  tipo_redireccion char(3) NOT NULL DEFAULT '301'
) COLLATE 'utf8_bin';

ALTER TABLE core_informe CHANGE ancho ancho varchar(250);
ALTER TABLE core_informe ADD permitido_home char(1) NULL DEFAULT 'N';
ALTER TABLE core_pcoder_historial ADD tipo_origen char(1) NULL DEFAULT 'A';

ALTER TABLE core_formulario_objeto ADD INDEX formulario (formulario);

ALTER TABLE core_formulario_boton ADD id_html varchar(250) NULL DEFAULT '';

UPDATE core_opcionlista SET valor_visual = REPLACE(valor_visual, '{ $ ', '{$');
UPDATE core_opcionlista SET valor_interno = REPLACE(valor_interno, '{ $ ', '{$');
"

########################################################################
#[TODO] No es usado por ningun proceso, solo un control de lo inmediatamente pendiente
TODOList="
Usar el hash sumando todos los permisos de un usuario para ver si el crc32 da diferente de lo que tiene a la plantilla entonces lo asigne o regenere.
"