#    _
#   |_) _ _  _ _|_. _ _					  	Copyright (C) 2022
#   |  | (_|(_  | |(_(_) 				  	John F. Arroyave Gutiérrez
#     www.practico.org					  	unix4you2@gmail.com
#                                           All rights reserved.
#
#	This program is free software; you can redistribute it and/or
#	modify it under the terms of the GNU General Public License
#	as published by the Free Software Foundation; either version 2
#	of the License, or (at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#	
#		Title: TravisCI
#		Ubicacion *[/.travis.yml]*.  Archivo con definicion de pruebas automaticas
#       PROBAR SINTAXIS MEDIANTE:    http://yaml-online-parser.appspot.com/


language: php
# Seleccion de las versiones de lenguaje a probar: 5.2.17, 5.3.x, 5.4.x, Hack de face (hhvm-3.3, hhvm-3.6, hhvm-3.9, hhvm-3.12, hhvm-3.15, hhvm-3.18, hhvm-nightly) etc
# TravisCI no soporta versiones 5.2.x and 5.3.x en Trusty. Se especifica distribucion Precise para esas versiones.
matrix:
  include:
  # Definicion de pruebas sobre multiples versiones de lenguaje y motor
    - php: 5.3
      dist: precise
      env:
      - DB1=MySQL
#      - DB2=PostgreSQL
#      - DB3=SQLite3
      sudo: required
      services:
      - mysql
#      - postgresql
#      - postgresql

    - php: 5.4
      dist: trusty
      env:
      - DB1=MySQL
#      - DB2=PostgreSQL
#      - DB3=SQLite3
      sudo: required
      services:
      - mysql
#      - postgresql

#    - php: 5.4
#      dist: trusty
#      env:
#      - DB=MySQL
#      - VER=5.7
#      sudo: required
#      services:
#      - mysql
#      addons:
#        apt:
#          sources:
#          - mysql-5.7-trusty
#          packages:
#          - mysql-server

    - php: 5.5
      dist: trusty
      env:
      - DB1=MySQL
#      - DB2=PostgreSQL
#      - DB3=SQLite3
      sudo: required
      services:
      - mysql
#      - postgresql
      
    - php: 5.6
      dist: trusty
      env:
      - DB1=MySQL
      sudo: required
      services:
      - mysql

    - php: 7.0
      dist: trusty
      env:
      - DB1=MySQL
      sudo: required
      services:
      - mysql

    - php: 7.1
      dist: trusty
      env:
      - DB1=MySQL
      sudo: required
      services:
      - mysql

    - php: 7.2
      dist: trusty
      env:
      - DB1=MySQL

      sudo: required
      services:
      - mysql

    - php: 8.0
      dist: xenial
      env:
      - DB1=MySQL
      sudo: required
      services:
      - mysql


#    - php: hhvm
#      dist: trusty
#      env:
#      - DB1=MySQL
#      - DB2=PostgreSQL
#      - DB3=SQLite3
#      sudo: required
#      services:
#      - mysql
#      - postgresql

# Configura notificaciones (email, IRC, campfire etc)
notifications:
#  irc: "irc.freenode.org#yourfavouriteroomfortravis"
  email: "unix4you2@gmail.com"

# Lista de ramas que no sera tenidas en cuenta
branches:
  except:
    - MedidorDeVelocidad
    - gh-pages
    - HabilitacionAuditorias
    - AcordeonOpcionesCentrales
    - SeguimientoGA
    - ImplementacionBootStrap
    - SubFormularios
    - PruebasDeSoftware
    - GeneracionGraficosResponsive
    - CaptchaVisual
    - MaterialDesign
    - EditorWYSIWYGResponsive
    - SocialParser
    - MaquetacionBootstrap

# Ramas del repositorio a tener en cuenta
branches:
  only:
    - master
    # Mediante expresiones regulares
    #    - /^deploy-.*$/

#before_install:
# Comandos para preparar el sistema antes de las pruebas para instalar prerequisitos o dependencias
#ls -al

# Comandos para instalar prerequisitos o dependencias
install:
  #- pear install pear/PHP_CodeSniffer
  - phpenv rehash
  #Verificamos la instalacion y el soporte de estandares
  #- phpcs -i
  #Otra forma: php pyrus.phar install pear/PHP_CodeSniffer-2.0.0RC4
  #Otra forma: pear install PHP_CodeSniffer-2.0.0RC4
  #Otra forma: pyrus install pear/PHP_CodeSniffer


# Ejecuta scripts antes de correr las pruebas, puede utilizar variables de entorno (env:)
before_script:
  #Creamos la base de datos para la instalacion de prueba sobre cada motor
  - mysql -e 'create database practico;'
#  - psql -c 'create database practico;' -U postgres
  #SQLite3:
#  - touch practico.db

  #Asegura permisos completos en la carpeta de pruebas
  - chmod -R 777 dev/tests

  #  - if [[ "$DB" == "pgsql" ]]; then psql -c "DROP DATABASE IF EXISTS hello_world_test;" -U postgres; fi
  #  - if [[ "$DB" == "pgsql" ]]; then psql -c "create database hello_world_test;" -U postgres; fi
  #  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database IF NOT EXISTS hello_world_test;" -uroot; fi

# Comandos para construir.  Todos deben retornar cero, cualquier otra salida se considera una falla
script:
  - sh  dev/tests/t_sintaxis.sh
  - php dev/tests/t_obsoletas.php
  - php dev/tests/t_archivos.php
  - php dev/tests/t_basedatos.php

#Para chequeos de sintaxis JS y CSS revisar repo https://github.com/elementary/website
#  - dev/parche2zip.sh                 # Script para generacion de parches entre versiones
#  - dev/practico2zip.sh              # Script para empaquetado y distribución de nuevas versiones

# Comandos a ejecutar cuando se finaliza la consutrccion sin problemas
#after_success

# Comandos a ejecutar cuando se obtuvo algun error
#after_failure

# Comandos finales a ejecutar despues de ejecutar script: con exito
#after_script